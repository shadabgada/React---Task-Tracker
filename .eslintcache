[{"D:\\UI\\JavaScript\\react-task-tracker\\src\\index.js":"1","D:\\UI\\JavaScript\\react-task-tracker\\src\\App.js":"2","D:\\UI\\JavaScript\\react-task-tracker\\src\\reportWebVitals.js":"3","D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Header.js":"4","D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Button.js":"5","D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Tasks.js":"6","D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Task.js":"7","D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\AddTask.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":2576,"mtime":1612592863220,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":671,"mtime":1612593680632,"results":"13","hashOfConfig":"10"},{"size":460,"mtime":1612285490570,"results":"14","hashOfConfig":"10"},{"size":297,"mtime":1612374754117,"results":"15","hashOfConfig":"10"},{"size":738,"mtime":1612375620714,"results":"16","hashOfConfig":"10"},{"size":1667,"mtime":1612426445646,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1pekasw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\UI\\JavaScript\\react-task-tracker\\src\\index.js",[],["37","38"],"D:\\UI\\JavaScript\\react-task-tracker\\src\\App.js",["39"],"import { useState } from 'react';\nimport {useEffect} from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () =>{\n\n  //This syntax is used for state management (Here, its Global State)\n  // First value contains key value pair.\n  //Second is the function which can be used to change states values\n  const [tasks, setTasks] = useState([])\n\n  useEffect(()=>{\n    const getTasks = async () =>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n\n//Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    console.log(data)\n    return data\n  }\n\n//Fetch Task\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n  console.log(data)\n  return data\n}\n\n\n//Delete Task\n  const deleteTask = async (id) =>{\n    await fetch(`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task)=>task.id !==id))\n    console.log('delete',id)\n  }\n\n\n//Toggle reminder\nconst onToggle = async (id)=>{\n\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle,reminder:!taskToToggle.reminder}\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'PUT',\n    headers:{\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n\n  setTasks(tasks.map((task)=>task.id===id?{...task, reminder:!task.reminder}:task))\n  console.log(id)\n}\n\n\n//Add Task\nconst addTask = async (task)=>{\n  //  const id =Math.floor(Math.random()*1000)+1\n\n  //  const newTask = {id, ...task}\n\n  const res = await fetch(`http://localhost:5000/tasks`,{\n    method:'POST',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(task)\n  })\n\n  const data = await res.json();\n  setTasks([...tasks,data])\n}\n\n//Show Form boolean variable\n//In ternary operations, after question mark use ()\n// For ex: true?():()\n//{showAddTask?(<AddTask addTask={addTask}/>):('No Form')}\nconst [showAddTask, setShowAddTask] =useState(false)\n\n\nconst onAdd = () =>{\n  setShowAddTask(!showAddTask)\n} \n\n  return (\n    <div className=\"container\">\n      <Header onAdd={onAdd} showAdd={showAddTask}/>\n\n      {showAddTask && <AddTask addTask={addTask}/>}\n\n      {tasks.length>0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={onToggle}/>):('No Tasks to show')}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\UI\\JavaScript\\react-task-tracker\\src\\reportWebVitals.js",[],"D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Header.js",[],"D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Button.js",[],["40","41"],"D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Tasks.js",[],"D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\Task.js",[],"D:\\UI\\JavaScript\\react-task-tracker\\src\\components\\AddTask.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":55,"column":9,"nodeType":"48","messageId":"49","endLine":55,"endColumn":12},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]